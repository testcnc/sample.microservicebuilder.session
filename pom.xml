<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 Microprofile.io
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>sample.microservicebuilder</groupId>
  <version>1.0.0-SNAPSHOT</version>
  <artifactId>microservice-session</artifactId>
  <packaging>war</packaging>
  <name>Conference :: Session</name>

  <profiles>
    <profile>
      <!-- Developer profile: `mvn -P dev` 
             Ensure that JAVA_HOME is set. Currently IBM Java 8 JDKs do not work with Arquillian Cube Kubernetes: SSL errors. 
             Note that we set 'namespace.use.existing' to 'default' because 
             https://github.com/arquillian/arquillian-cube/pull/703
             does not work for minikube on Windows 10. Mac users may be able to delete that entry. 
             
             If you don't want to say -P dev, you can set the systemPropertyVariables as environment variables instead:
             
               export ENV_INIT_ENABLED=false 
               export NAMESPACE_USE_EXISTING=default
               mvn verify
        -->
      <id>dev</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <arquillian.debug>true</arquillian.debug>
                <env.init.enabled>false</env.init.enabled>
                <namespace.use.existing>default</namespace.use.existing>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <packagingExcludes>pom.xml</packagingExcludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19.1</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify-results</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <argLine>-Dcom.ibm.jsse2.overrideDefaultTLS=true</argLine>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>

    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
      <version>7.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.8.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.github.wasdev.microprofile-conference</groupId>
      <artifactId>demo-bootstrap</artifactId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>microprofile</artifactId>
      <scope>provided</scope>
      <version>2016.10.0</version>
    </dependency>

    <!-- Dependencies for Arquillian Cube failsafe tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-standalone</artifactId>
      <version>1.1.13.Final</version>
      <scope>test</scope>
    </dependency> 
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-requirement</artifactId>
      <version>1.7.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-kubernetes</artifactId>
      <version>1.7.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-openshift-uberjar</artifactId>
      <version>2.5.7</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.config</groupId>
      <artifactId>microprofile-config-api</artifactId>
      <version>1.1</version>
      <scope>provided</scope>
    </dependency>        
    <dependency>
      <groupId>org.eclipse.microprofile.metrics</groupId>
      <artifactId>microprofile-metrics-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>        
    <dependency>
      <groupId>org.eclipse.microprofile.health</groupId>
      <artifactId>microprofile-health-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>  
    <!-- JAX-RS client does not work properly on kube across namespaces, but if you can get past that: 
        <dependency>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-rs-client</artifactId>
          <version>3.1.12</version>
          <scope>test</scope>
        </dependency>
        -->
  </dependencies>
</project>
